import logging


from config import TOKEN
from telegram.ext import Application, MessageHandler, filters
from telegram.ext import CommandHandler
from telegram import ReplyKeyboardMarkup, KeyboardButton

logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.DEBUG)
logger = logging.getLogger(__name__)

reply_keyboard = [['/hobby', '/selfie', '/gpt']
                 ,['—Ñ–æ—Ç–æ –∏ —Å—é—Ä–ø—Ä–∏–∑', 'sql –∏ nosql', '–ø—Ä–æ –ª—é–±–æ–≤—å']]
markup = ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=False, resize_keyboard=True)


async def start(update, context):
    user = update.effective_user
    await update.message.reply_html(rf"–ü—Ä–∏–≤–µ—Ç {user.mention_html()}! –î–∞–≤–∞–π –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è!",  reply_markup=markup)

async def help_command(update, context):
    await update.message.reply_text("–ö–æ–º–∞–Ω–¥—ã –≤—Å—è–∫–∏–µ –Ω—É–∂–Ω—ã! –ù–æ –ø–∏—Å–∞—Ç—å —Å–∫—É—á–Ω–æ –∏ –¥–æ–ª–≥–æ, –ø–æ—ç—Ç–æ–º—É –ø—Ä–µ–¥–ª–∞–≥–∞—é —Ç–æ–ª—å–∫–æ /start, /help –∏ /source)))")

async def my_hobby(update, context):
    await update.message.reply_text(
        '–•–æ–±–±–∏ —É –º–µ–Ω—è –º–Ω–æ–≥–æ –Ø –ª—é–±–ª—é –∏–≥—Ä–∞—Ç—å –≤–æ –≤—Å–µ —á—Ç–æ —Å *–º—è—á–µ–º*, –≥–æ—Ä–Ω—ã–µ –ø–æ—Ö–æ–¥—ã –∏ –≥–∏—Ç–∞—Ä—É —É –∫–æ—Å—Ç—Ä–∞\.\n'
        "–ù–æ –∞–π—Ç–∏—à–Ω–∞—è —Å—Ç—Ä–∞—Ç—å —Å–æ—Å—Ç–æ–∏—Ç –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ *NLP* –∏ –Ω–µ —Ç–æ–ª—å–∫–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –æ—Å–µ—Ç–∏–Ω—Å–∫–æ–≥–æ —è–∑—ã–∫–∞:  –º—É–ª—å—Ç–∏–º–µ–¥–∏–π–Ω—ã–π —É—á–µ–±–Ω–∏–∫ –ø–æ —Ñ–æ–Ω–µ—Ç–∏–∫–µ –æ—Å–µ—Ç–∏–Ω—Å–∫–æ–≥–æ —è–∑—ã–∫–∞,  —Å–ª–æ–≤–∞—Ä–∏ –≤ –º–∞—à–∏–Ω–æ—á–∏—Ç–∞–µ–º–æ–º –≤–∏–¥–µ\.\n"
        "–ö–æ–≥–¥–∞—Ç–æ –¥–∞–≤–Ω–æ, –Ω–∞ –∑–∞—Ä–µ –º–æ–µ–≥–æ —É–≤–ª–µ—á–µ–Ω–∏—è, –∞ —ç—Ç–æ –±—ã–ª–æ –µ—â–µ –≤ –ø—Ä–æ—à–ª–æ–º –≤–µ–∫–µ –∏ –¥–∞–∂–µ —Ç—ã—Å—è—á–µ–ª–µ—Ç–∏–∏ ![üòÖ](tg://emoji?id=128949399) , –∫–æ–º–∞–Ω–¥–æ–π –º—ã –¥–µ–ª–∞–ª–∏ —Å–∏—Å—Ç–µ–º—É —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –æ—Å–µ—Ç–∏–Ω—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ –∏ –∫–æ–º–ø–∏–ª—è—Ç–∏–≤–Ω—ã–π —Å–∏–Ω—Ç–µ–∑–∞—Ç–æ—Ä –æ—Å–µ—Ç–∏–Ω—Å–∫–æ–π —Ä–µ—á–∏\.\n"
        "–°–æ–∑–¥–∞–µ–º –º–∞–ª–µ–Ω—å–∫–∏–µ —è–∑—ã–∫–æ–≤—ã–µ –∏–≥—Ä—ã\. –ê –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å, —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ —Å–∏—Å—Ç–µ–º–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏–∏\.\n"
      , parse_mode='MarkdownV2')

async def stiker(update, context):
    await update.message.reply_text("–ö–æ–º–∞–Ω–¥—ã –≤—Å—è–∫–∏–µ –Ω—É–∂–Ω—ã! –ù–æ –ø–∏—Å–∞—Ç—å —Å–∫—É—á–Ω–æ –∏ –¥–æ–ª–≥–æ, –ø–æ—ç—Ç–æ–º—É –ø—Ä–µ–¥–ª–∞–≥–∞—é —Ç–æ–ª—å–∫–æ /start, /help –∏ /source)))")

async def selfie(update, context):
    await context.bot.send_photo(
        update.message.chat_id, photo=open(r'images/selfie.jpg', 'rb'))

async def gpt(update, context):
    audio = open(r'audio/gpt.ogg', 'rb')
    await context.bot.send_audio(update.message.chat_id, audio)
    audio.close()

async def stiker(update, context):
    await context.bot.send_photo(
        update.message.chat_id, photo=open(r'images/mak0.jpg', 'rb'))
    await update.message.reply_html(
        "–≠—Ç–æ –±—ã–ª–∞ —Å–∫—É—á–Ω–∞—è —Ñ–æ—Ç–æ—á–∫–∞, –Ω–æ —É –º–µ–Ω—è –µ—Å—Ç—å –∫—É—á–∞ —Å—Ç–∏–∫–µ—Ä–æ–≤  <a href='https://t.me/addstickers/MD_Makarenko'> —Å–æ –º–Ω–æ–π. </a> –ü–æ–ª—å–∑—É–π—Ç–µ—Å—å, –ª—é–¥–∏ –¥–æ–±—Ä—ã–µ")



async def nosql(update, context):
    audio = open(r'audio/nosql.ogg', 'rb')
    await context.bot.send_audio(update.message.chat_id, audio)
    audio.close()

async def love(update, context):
    audio = open(r'audio/love.ogg', 'rb')
    await context.bot.send_audio(update.message.chat_id, audio)
    audio.close()


async def source(update, context):
    await update.message.reply_html("–ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –≤—Å–µ–≥–æ —ç—Ç–æ–≥–æ –¥–æ–±—Ä–∞ <a href='https://github.com/Makarenkomd/Bot_yandex_practicum.git'> —Ç—É—Ç </a>")

command_dict = {'—Ñ–æ—Ç–æ –∏ —Å—é—Ä–ø—Ä–∏–∑': stiker, 'sql –∏ nosql': nosql, "–ø—Ä–æ –ª—é–±–æ–≤—å": love}
async def echo(update, context):
    text = update.message.text
    if text in command_dict:
        await command_dict[text](update, context)
    else:
        await update.message.reply_text("—è —Ç—É–ø–æ–π –±–æ—Ç–∏–∫, —è —Ç–∞–∫–æ–π –Ω–µ –ø–æ–Ω–∏–º–∞–π)")

def main():
    application = Application.builder().token(TOKEN).build()
    text_handler = MessageHandler(filters.TEXT & ~filters.COMMAND, echo)
    application.add_handler(text_handler)
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(CommandHandler("hobby", my_hobby))
    application.add_handler(CommandHandler("selfie", selfie))
    application.add_handler(CommandHandler("gpt", gpt))
    #application.add_handler(CommandHandler("nosql", nosql))
    #application.add_handler(CommandHandler("stiker", stiker))
    #application.add_handler(CommandHandler("love", love))

    application.add_handler(CommandHandler("source", source))

    application.run_polling()


if __name__ == '__main__':
    main()
